# -*- coding: utf-8 -*-
"""Codsoft-Task1-TITANIC SURVIVAL PREDICTION.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rLEwxG8AkQ_mbYhFiFBMSub4ve0z9cX1
"""

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix
from sklearn.preprocessing import LabelEncoder

# Load the dataset
data = pd.read_csv("titanic.csv")

# Data preprocessing
# Drop irrelevant columns
data = data.drop(["Ticket", "Cabin", "PassengerId"], axis=1)

# Handle missing values
data["Age"].fillna(data["Age"].mean(), inplace=True)
data["Fare"].fillna(data["Fare"].mean(), inplace=True)
data["Embarked"].fillna(data["Embarked"].mode()[0], inplace=True)

# Encode categorical variables
le = LabelEncoder()
data["Sex"] = le.fit_transform(data["Sex"])
data["Embarked"] = le.fit_transform(data["Embarked"])

# Split data into features (X) and target (y)
X = data.drop(["Survived", "Name"], axis=1)
y = data["Survived"]

# Split data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Model selection and training
model = RandomForestClassifier(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

# Model evaluation
y_pred = model.predict(X_test)
accuracy = accuracy_score(y_test, y_pred)
print("Accuracy: {:.2f}%".format(accuracy * 100))

# More evaluation metrics
print(classification_report(y_test, y_pred))
print("Confusion Matrix:")
print(confusion_matrix(y_test, y_pred))

# Print a few passengers' names, their "Age," "Sex," and survival status
passenger_subset = X_test.sample(5)  # Change 5 to the number of passengers you want to print
for index, row in passenger_subset.iterrows():
    status = "Survived" if y_test.loc[index] == 1 else "Died"
    passenger_name = data.loc[index, "Name"]
    print(f"Passenger: {passenger_name}, Age: {row['Age']}, Sex: {row['Sex']}, Status: {status}")